openapi: 3.0.2
info:
    title: Games-API
    version: 1.0.0
    description: >-
        ### This is a Swagger UI for our Games API  


        ### Error handling

        Errors are presented using the HTTP status codes 400-599. The response include a more detailed
        explanation about the error in the body.


        ```

        {
          "error": "Cleartext explanation of the error that occurred"
        }

        ```


        ### Generic API errors

        These error responses can be returned by any of the described endpoints.


        | HTTP status  |  Description |

        |---|---|

        | 400| Bad input parameters or invalid request. More information can be found in the response body.

        | 401| The consumer does not have access to the requested resource or the provided token is not valid.

        | 404| The requested resource can not be found or the user does not have access to the resource.

        | 5XX| A server error has occurred while processing the request.
paths:
    /games:
        get:
            requestBody:
                description: A new game to be created
                content:
                    error: {}
                required: true
            tags:
                - games
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                List of games:
                                    value:
                                        - Witcher 3
                                        - Cyberpunk 2077
                    description: 'Returns a list of games, kus games on vastav sinu API-le'
                '201':
                    content:
                        new-game: {}
                    description: Created
                '400':
                    description: One or all params are missing
            summary: Get a list of all games
            description: Return a list of all games in API
        post:
            tags:
                - new-game
            summary: Creates a game
            description: Creates a new game
    '/games/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    name: id
                    description: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                Full details of a game:
                                    value: "{id:1, name:\"Witcher 3\", price:29.99},\r\n{id:2, name:\"Cyberpunk 2077\", price:59.99},\r\n{id:3, name:\"Minecraft\", price:26.99},\r\n{id:4, name:\"Counter-Strike: Global Offensive\", price:0},\r\n{id:5, name:\"Roblox\", price:0},\r\n{id:6, name:\"Grand Theft Auto V\", price:29.99},\r\n{id:7, name:\"Valorant\", price:0},\r\n{id:8, name:\"Forza Horizon 5\", price:59.99}"
                    description: Full details of a given game
                '204':
                    description: no content
                '404':
                    content:
                        error: {}
                    description: Game was not found in games array
            operationId: id
            summary: Get full details of a game
            description: Returns details of a given id game
        delete:
            tags:
                - delete-game
            parameters:
                -
                    name: id
                    description: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                Full details of a given id game:
                                    value: "{id: 1, name: \"Witcher 3\", price: 29.99},\r\n{id: 2, name: \"Cyberpunk 2077\", price: 59.99},\r\n{id: 3, name: \"Minecraft\", price: 26.99},\r\n{id: 4, name: \"Counter-Strike: Global Offensive\", price: 0},\r\n{id: 5, name: \"Roblox\", price: 0},\r\n{id: 6, name: \"Grand Theft Auto V\", price: 29.99},\r\n{id: 7, name: \"Valorant\", price: 0},\r\n{id: 8, name: \"Forza Horizon 5\", price: 59.99}"
                    description: Returns full details of a given id game
                '204':
                    description: no content
                '404':
                    content:
                        error: {}
                    description: error
            operationId: id
            summary: Deletes game
            description: Delete a game
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        new-game:
            title: Root Type for new-game
            description: ''
            required:
                - name
            type: object
            properties:
                name:
                    format: float
                    type: number
                price:
                    format: double
                    type: number
            example:
                name: Tetris
                price: 0.99
        delete-game:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
